Chapter 1:
Clean code is elegance.
It is pleasing to read. It is very simple and efficient.
Clean code is focused. Each function, class, and module must have a single-minded attitude.
"Leave the campground cleaner than you found" applies to code. Make a variable name cleaner, etc. on a codebase you're working on.

Chapter 2:
Note: the author consistently uses camel case to name variables/functions/etc.
Choose good variable names.
Make the variable name explicit, not implicit. The variable name should reveal the intent of the variable, and should NOT require a comment to explain it.
Avoid disinformation. This means do not confuse other terms with what it's not supposed to be (e.g. naming a variable accountList even though the data structure used is NOT a list.)
Don't use two names that vary very little in shape. (like same exact words except for one word are the variable names)
Make meaningful distinctions between names. Don't use noise-words that mean the same/nothing (e.g. Customer and CustomerObject) and definitely do not use incremental numbering. 
Names must be pronouncable, not a bunch of random letters. For communication purposes.
Note: You CAN use single-letter names (e.g. i) but they can only be used as local variables inside short methods.
Make the name easy to search for (a pretty long variable name is good for this) The length of a name should correspond to the size of its scope (how many times it will be used)

